{
  "name": "@bbc/cloudflare-queue-consumer",
  "version": "0.0.5",
  "description": "Build Cloudflare Queue applications without the boilerplate",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bbc/cloudflare-queue-consumer.git"
  },
  "bugs": {
    "url": "https://github.com/bbc/cloudflare-queue-consumer/issues"
  },
  "homepage": "https://bbc.github.io/cloudflare-queue-consumer/",
  "keywords": [
    "cloudflare",
    "queue",
    "consumer"
  ],
  "license": "Apache-2.0",
  "publishConfig": {
    "provenance": false
  },
  "type": "module",
  "exports": {
    ".": {
      "types": "./dist/types/index.d.ts",
      "require": "./dist/cjs/index.js",
      "import": "./dist/esm/index.js",
      "default": "./dist/esm/index.js"
    }
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "clean": "rm -fr dist/*",
    "compile": "tsc -b ./tsconfig.cjs.json ./tsconfig.esm.json",
    "build": "pnpm run clean && pnpm run compile",
    "watch": "tsc --watch",
    "prepublishOnly": "pnpm run build",
    "lint": "eslint . --ext .ts",
    "lint:fix": "eslint . --fix",
    "format": "prettier --log-level warn --write \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "format:check": "prettier --check \"**/*.{js,json,jsx,md,ts,tsx,html}\"",
    "test:unit": "node --import tsx --test ./test/unit/*.test.ts",
    "test": "pnpm run test:unit && pnpm run lint && pnpm run format:check",
    "lcov": "node --import tsx --test --experimental-test-coverage --test-reporter=lcov --test-reporter-destination=coverage/lcov.info ./test/unit/*.test.ts",
    "generate-docs": "typedoc",
    "dev": "DEBUG=cloudflare-queue-consumer tsx ./example/index.ts"
  },
  "devDependencies": {
    "@types/node": "^20.11.25",
    "eslint": "^8.57.0",
    "eslint-config-iplayer": "^9.2.0",
    "eslint-config-prettier": "^9.1.0",
    "prettier": "^3.2.5",
    "tsx": "^4.7.1",
    "typedoc": "^0.25.12",
    "typescript": "^5.4.2"
  },
  "dependencies": {
    "debug": "^4.3.4",
    "undici": "^6.19.2"
  },
  "eslintConfig": {
    "extends": [
      "iplayer/base",
      "iplayer/ts",
      "prettier"
    ],
    "parserOptions": {
      "sourceType": "module"
    },
    "rules": {
      "@typescript-eslint/naming-convention": [
        "error",
        {
          "selector": "variable",
          "format": [
            "camelCase",
            "UPPER_CASE",
            "PascalCase"
          ],
          "leadingUnderscore": "allow"
        }
      ]
    }
  }
}
